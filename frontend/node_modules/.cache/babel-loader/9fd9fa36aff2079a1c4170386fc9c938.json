{"ast":null,"code":"var _has = /*#__PURE__*/require('./_has'); // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}\n\nmodule.exports = _objectAssign;","map":{"version":3,"sources":["/Users/abrarrauf/Desktop/tutorials/advanced-course/frontend/node_modules/ramda/src/internal/_objectAssign.js"],"names":["_has","require","_objectAssign","target","TypeError","output","Object","idx","length","arguments","source","nextKey","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAG,aAAaC,OAAO,CAAC,QAAD,CAA/B,C,CAEA;;;AAGA,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,MAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,UAAM,IAAIC,SAAJ,CAAc,4CAAd,CAAN;AACD;;AAED,MAAIC,MAAM,GAAGC,MAAM,CAACH,MAAD,CAAnB;AACA,MAAII,GAAG,GAAG,CAAV;AACA,MAAIC,MAAM,GAAGC,SAAS,CAACD,MAAvB;;AACA,SAAOD,GAAG,GAAGC,MAAb,EAAqB;AACnB,QAAIE,MAAM,GAAGD,SAAS,CAACF,GAAD,CAAtB;;AACA,QAAIG,MAAM,IAAI,IAAd,EAAoB;AAClB,WAAK,IAAIC,OAAT,IAAoBD,MAApB,EAA4B;AAC1B,YAAIV,IAAI,CAACW,OAAD,EAAUD,MAAV,CAAR,EAA2B;AACzBL,UAAAA,MAAM,CAACM,OAAD,CAAN,GAAkBD,MAAM,CAACC,OAAD,CAAxB;AACD;AACF;AACF;;AACDJ,IAAAA,GAAG,IAAI,CAAP;AACD;;AACD,SAAOF,MAAP;AACD;;AACDO,MAAM,CAACC,OAAP,GAAiBX,aAAjB","sourcesContent":["var _has = /*#__PURE__*/require('./_has');\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\nmodule.exports = _objectAssign;"]},"metadata":{},"sourceType":"script"}