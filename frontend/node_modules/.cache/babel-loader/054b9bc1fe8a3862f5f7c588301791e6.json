{"ast":null,"code":"var _arrayFromIterator = /*#__PURE__*/require('./_arrayFromIterator');\n\nvar _containsWith = /*#__PURE__*/require('./_containsWith');\n\nvar _functionName = /*#__PURE__*/require('./_functionName');\n\nvar _has = /*#__PURE__*/require('./_has');\n\nvar identical = /*#__PURE__*/require('../identical');\n\nvar keys = /*#__PURE__*/require('../keys');\n\nvar type = /*#__PURE__*/require('../type');\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nfunction _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}\n\nmodule.exports = _equals;","map":{"version":3,"sources":["/Users/abrarrauf/Desktop/tutorials/advanced-course/frontend/node_modules/ramda/src/internal/_equals.js"],"names":["_arrayFromIterator","require","_containsWith","_functionName","_has","identical","keys","type","_uniqContentEquals","aIterator","bIterator","stackA","stackB","a","b","eq","_a","_b","_equals","slice","aItem","typeA","equals","constructor","valueOf","name","message","source","global","ignoreCase","multiline","sticky","unicode","idx","length","size","entries","concat","values","keysA","extendedStackA","extendedStackB","key","module","exports"],"mappings":"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","sourcesContent":["var _arrayFromIterator = /*#__PURE__*/require('./_arrayFromIterator');\n\nvar _containsWith = /*#__PURE__*/require('./_containsWith');\n\nvar _functionName = /*#__PURE__*/require('./_functionName');\n\nvar _has = /*#__PURE__*/require('./_has');\n\nvar identical = /*#__PURE__*/require('../identical');\n\nvar keys = /*#__PURE__*/require('../keys');\n\nvar type = /*#__PURE__*/require('../type');\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nfunction _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}\nmodule.exports = _equals;"]},"metadata":{},"sourceType":"script"}